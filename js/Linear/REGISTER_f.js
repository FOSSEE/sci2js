/* autogenerated from "macros/Linear/REGISTER_f.sci" */
function REGISTER_f() {
    REGISTER_f.prototype.define = function REGISTER_f() {
        z0 = zeros(10,1);
        model = scicos_model();
        model.sim = "delay";
        model.in1 = 1;
        model.out = 1;
        model.evtin = 1;
        model.dstate = z0;
        model.blocktype = "d";
        model.dep_ut = [false,false];
        exprs = strcat(string(z0),";");
        gr_i = [];
        this.x = standard_define([2.5,2.5],model,exprs,gr_i);
        return new BasicBlock(this.x);
    }
    REGISTER_f.prototype.details = function REGISTER_f() {
        return this.x;
    }
    REGISTER_f.prototype.get = function REGISTER_f() {
    }
    REGISTER_f.prototype.set = function REGISTER_f() {
        this.x = arg1;
        graphics = arg1.graphics;
        exprs = graphics.exprs;
        model = arg1.model;
        while (true) {
            [ok,z0,exprs] = scicos_getvalue("Set delay parameters","Register initial condition",list("vec",-1),exprs);
            if (!ok) {
                break;
            }
            if (prod(size(z0))<1) {
                message("Register length must be at least 1");
                ok = false;
            }
            if (ok) {
                graphics.exprs = exprs;
                model.dstate = z0;
                this.x.graphics = graphics;
                this.x.model = model;
                break;
            }
        }
        return new BasicBlock(this.x);
    }
}
