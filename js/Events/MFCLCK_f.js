/* autogenerated from "macros/Events/MFCLCK_f.sci" */
function MFCLCK_f() {
    MFCLCK_f.prototype.define = function MFCLCK_f() {
        this.nn = 2;
        this.dt = 0.1;
        this.model = scicos_model();
        this.model.sim = new ScilabString(["mfclck"]);
        this.model.evtin = new ScilabDouble([1]);
        this.model.evtout = new ScilabDouble([1],[1]);
        this.model.dstate = new ScilabDouble([0]);
        this.model.rpar = new ScilabDouble([this.dt]);
        this.model.ipar = new ScilabDouble([this.nn]);
        this.model.blocktype = new ScilabString(["d"]);
        this.model.firing = new ScilabDouble([-1,0]);
        this.model.dep_ut = new ScilabBoolean([false,false]);
        var exprs = [[string(this.dt)],[string(this.nn)]];
        var gr_i = new ScilabString(["xstringb(orig(1),orig(2),\"MFCLCK_f\",sz(1),sz(2));"]);
        this.x = new standard_define(new ScilabDouble([3,2]),this.model,new ScilabDouble(exprs),gr_i);
        return new BasicBlock(this.x);
    }
    MFCLCK_f.prototype.details = function MFCLCK_f() {
        return this.x;
    }
    MFCLCK_f.prototype.get = function MFCLCK_f() {
        var exprs = this.graphics.exprs;
        this.set_param_popup_title = "Set Multifrequency clock parameters";
        var options = {
            dt:["basic period (1/f)",this.dt],
            nn:["multiply by (n)",this.nn],
        }
        return options;
    }
    MFCLCK_f.prototype.set = function MFCLCK_f() {
        var exprs = this.graphics.exprs;
        var ok = true;
        this.dt = parseFloat(arguments[0]["dt"]);
        this.nn = parseFloat(arguments[0]["nn"]);
        var exprs = [arguments[0]["dt"], arguments[0]["nn"]];
        if (ok) {
            this.model.ipar = new ScilabDouble([this.nn]);
            this.model.rpar = new ScilabDouble([this.dt]);
            var hh = this.model.firing;
            hh[2-1] = 0;
            this.model.firing = new ScilabDouble(hh);
            this.graphics.exprs = new ScilabDouble([exprs]);
            this.x.graphics = this.graphics;
            this.x.model = this.model;
        }
        return new BasicBlock(this.x);
    }
    MFCLCK_f.prototype.get_popup_title = function MFCLCK_f() {
        return this.set_param_popup_title;
    }
    MFCLCK_f.prototype.importset = function MFCLCK_f() {
        var graphics = this.x.graphics;
        var ary = getData(graphics.exprs);
        this.dt = ary[0];
        this.nn = ary[1];
    }
    MFCLCK_f.prototype.getContainer = function MFCLCK_f() { return new BasicBlock(this.x); }
}
