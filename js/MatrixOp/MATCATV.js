/* autogenerated from "macros/MatrixOp/MATCATV.sci" */
function MATCATV() {
MATCATV.prototype.define = function MATCATV() {
l1=[[2],[2]];
model=scicos_model();
function_name="mat_catv";
funtyp=4;
model.sim=list(function_name,funtyp);
model.in2=[[-1],[-1]];
model.in1=[[-2],[-3]];
model.intyp=[-1,-1];
model.out=0;
model.out2=-1;
model.outtyp=-1;
model.evtin=[];
model.evtout=[];
model.state=[];
model.dstate=[];
model.rpar=[];
model.ipar=[];
model.blocktype="c";
model.firing=[];
model.dep_ut=[true,false];
label=[sci2exp(2)];
gr_i=[];
x=standard_define([2,3],model,label,gr_i);
}
MATCATV.prototype.details = function MATCATV() {
}
MATCATV.prototype.get = function MATCATV() {
}
MATCATV.prototype.set = function MATCATV() {
x=arg1;
model=arg1.model;
graphics=arg1.graphics;
label=graphics.exprs;
if (size(label,"*")>1) {
label="size(evstr("+label(2)+"),\'*\')";
}
while (true) {
[ok,nin,lab]=scicos_getvalue("Set MATCATV block parameters",["Number od inputs"],list("vec",1),label);
if (!ok) {
break;
}
label=lab;
in1=[-(transpose([2:nin+1])),-ones(nin,1)];
it=-ones(nin,1);
ot=-1;
out=[0,-1];
[model,graphics,ok]=set_io(model,graphics,list(in1,it),list(out,ot),[],[]);
if (ok) {
funtyp=4;
model.sim=list("mat_catv",funtyp);
graphics.exprs=label;
arg1.graphics=graphics;
arg1.model=model;
x=arg1;
break;
}
}
}
}
