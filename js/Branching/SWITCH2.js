/* autogenerated from "macros/Branching/SWITCH2.sci" */
function SWITCH2() {
    SWITCH2.prototype.define = function SWITCH2() {
        var in1 = [[-1],[1],[-1]];
        var ipar = [0];
        this.nzz = 1;
        var rpar = 0;
        this.model = scicos_model();
        this.model.sim = list(new ScilabString(["switch2"]), new ScilabDouble([4]));
        this.model.in = new ScilabDouble(in1);
        this.model.out = new ScilabDouble([-1]);
        this.model.ipar = new ScilabDouble(ipar);
        this.model.rpar = new ScilabDouble([rpar]);
        this.model.nzcross = new ScilabDouble([this.nzz]);
        this.model.nmode = new ScilabDouble([1]);
        this.model.blocktype = new ScilabString(["c"]);
        this.model.dep_ut = new ScilabBoolean([true,false]);
        var exprs = [[string(ipar)],[string(rpar)],[string(this.nzz)]];
        var gr_i = new ScilabString(["xstringb(orig(1),orig(2),\"SWITCH2\",sz(1),sz(2));"]);
        this.x = new standard_define(new ScilabDouble([2,2]),this.model,new ScilabDouble(exprs),gr_i);
        return new BasicBlock(this.x);
    }
    SWITCH2.prototype.details = function SWITCH2() {
        return this.x;
    }
    SWITCH2.prototype.get = function SWITCH2() {
        var exprs = this.graphics.exprs;
        this.set_param_popup_title = "Set parameters";
        var options = {
            rule:["pass first input if: u2>=a (0), u2>a (1), u2~=a (2)",this.rule],
            thra:["threshold a",this.thra],
            nzz:["use zero crossing: yes (1), no (0)",this.nzz],
        }
        return options;
    }
    SWITCH2.prototype.set = function SWITCH2() {
        var exprs = this.graphics.exprs;
        while (true) {
            var ok = true;
            this.rule = parseFloat(arguments[0]["rule"]);
            this.thra = arguments[0]["thra"];
            this.nzz = parseFloat(arguments[0]["nzz"]);
            var exprs = [arguments[0]["rule"], arguments[0]["thra"], arguments[0]["nzz"]];
            if (!ok) {
                break;
            }
            this.rule = int(this.rule);
            if ((this.rule<0)) {
                this.rule = 0;
            }
            if ((this.rule>2)) {
                this.rule = 2;
            }
            this.graphics.exprs = new ScilabDouble([exprs]);
            this.model.ipar = new ScilabDouble([this.rule]);
            this.model.rpar = new ScilabDouble([this.thra]);
            if (this.nzz!=0) {
                this.model.nmode = new ScilabDouble([1]);
                this.model.nzcross = new ScilabDouble([1]);
            } else {
                this.model.nmode = new ScilabDouble([0]);
                this.model.nzcross = new ScilabDouble([0]);
            }
            this.x.graphics = this.graphics;
            this.x.model = this.model;
            break;
        }
        return new BasicBlock(this.x);
    }
    SWITCH2.prototype.get_popup_title = function SWITCH2() {
        return this.set_param_popup_title;
    }
    SWITCH2.prototype.importset = function SWITCH2() {
        var graphics = this.x.graphics;
        var ary = getData(graphics.exprs);
        this.rule = ary[0];
        this.thra = ary[1];
        this.nzz = ary[2];
    }
    SWITCH2.prototype.getContainer = function SWITCH2() { return new BasicBlock(this.x); }
}
