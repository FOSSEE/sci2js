/* autogenerated from "macros/NonLinear/LOGBLK_f.sci" */
function LOGBLK_f() {
    LOGBLK_f.prototype.define = function LOGBLK_f() {
        in1 = 1;
        this.a = math.E;
        model = scicos_model();
        model.sim = "logblk";
        model.in1 = -1;
        model.out = -1;
        model.rpar = this.a;
        model.blocktype = "c";
        model.dep_ut = [true,false];
        exprs = "%e";
        gr_i = [];
        this.x = standard_define([2,2],model,exprs,gr_i);
        return new BasicBlock(this.x);
    }
    LOGBLK_f.prototype.details = function LOGBLK_f() {
        return this.x;
    }
    LOGBLK_f.prototype.get = function LOGBLK_f() {
        var options = {
        }
        return options;
    }
    LOGBLK_f.prototype.set = function LOGBLK_f() {
        this.a = parseFloat(arguments[0]["a"])
        this.x = arg1;
        graphics = arg1.graphics;
        exprs = graphics.exprs;
        model = arg1.model;
        if (size(exprs,"*")==2) {
            exprs = exprs[2-1];
        }
        while (true) {
            [ok,this.a,exprs] = scicos_getvalue("Set log block parameters","Basis (>1)",list("vec",1),exprs);
            if (!ok) {
                break;
            }
            if (this.a<=1) {
                message("Basis must be larger than 1");
            } else {
                if (ok) {
                    graphics.exprs = exprs;
                    model.rpar = this.a;
                    this.x.graphics = graphics;
                    this.x.model = model;
                    break;
                }
            }
        }
        return new BasicBlock(this.x);
    }
}
