/* autogenerated from "macros/Misc/EDGETRIGGER.sci" */
function EDGETRIGGER() {
    EDGETRIGGER.prototype.define = function EDGETRIGGER() {
        this.edge = 1;
        this.model = scicos_model();
        this.model.sim = list("edgetrig",4);
        this.model.in1 = new ScilabDouble(1);
        this.model.out = new ScilabDouble(1);
        this.model.dstate = new ScilabDouble(0);
        this.model.nzcross = new ScilabDouble(1);
        this.model.ipar = new ScilabDouble(sign(this.edge));
        this.model.blocktype = new ScilabString("c");
        this.model.dep_ut = [true,false];
        exprs = [string(this.edge)];
        gr_i = [];
        this.x = standard_define([3,2],this.model,exprs,gr_i);
        return new BasicBlock(this.x);
    }
    EDGETRIGGER.prototype.details = function EDGETRIGGER() {
        return this.x;
    }
    EDGETRIGGER.prototype.get = function EDGETRIGGER() {
        var options = {
            edge:["rising (1), falling (-1), both (0)",this.edge],
        }
        return options;
    }
    EDGETRIGGER.prototype.set = function EDGETRIGGER() {
        this.edge = parseFloat(arguments[0]["edge"])
        this.x = arg1;
        graphics = arg1.graphics;
        exprs = graphics.exprs;
        this.model = arg1.model;
        while (true) {
            [ok,this.edge,exprs] = scicos_getvalue("Set edge trigger block parameters",["rising (1), falling (-1), both (0)"],list("vec",1),exprs);
            if (!ok) {
                break;
            }
            this.model.ipar = new ScilabDouble(sign(this.edge));
            graphics.exprs = exprs;
            this.x.graphics = graphics;
            this.x.model = this.model;
            break;
        }
        return new BasicBlock(this.x);
    }
}
