/* autogenerated from "macros/Misc/EDGETRIGGER.sci" */
function EDGETRIGGER() {
    EDGETRIGGER.prototype.define = function EDGETRIGGER() {
        this.edge = 1;
        this.model = scicos_model();
        this.model.sim = list(new ScilabString(["edgetrig"]), new ScilabDouble([4]));
        this.model.in = new ScilabDouble([1]);
        this.model.out = new ScilabDouble([1]);
        this.model.dstate = new ScilabDouble([0]);
        this.model.nzcross = new ScilabDouble([1]);
        this.model.ipar = new ScilabDouble([sign(this.edge)]);
        this.model.blocktype = new ScilabString(["c"]);
        this.model.dep_ut = new ScilabBoolean([true,false]);
        var exprs = [string(this.edge)];
        var gr_i = new ScilabString(["xstringb(orig(1),orig(2),\"EDGETRIGGER\",sz(1),sz(2));"]);
        this.x = new standard_define(new ScilabDouble([3,2]),this.model,new ScilabString(exprs),gr_i);
        return new BasicBlock(this.x);
    }
    EDGETRIGGER.prototype.details = function EDGETRIGGER() {
        return this.x;
    }
    EDGETRIGGER.prototype.get = function EDGETRIGGER() {
        var options = {
            edge:["rising (1), falling (-1), both (0)",this.edge],
        }
        return options;
    }
    EDGETRIGGER.prototype.set = function EDGETRIGGER() {
        var exprs = this.graphics.exprs;
        while (true) {
            var ok = true;
            this.edge = parseFloat(arguments[0]["edge"]);
            var exprs = [arguments[0]["edge"]];
            if (!ok) {
                break;
            }
            this.model.ipar = new ScilabDouble([sign(this.edge)]);
            this.graphics.exprs = new ScilabDouble([exprs]);
            this.x.graphics = this.graphics;
            this.x.model = this.model;
            break;
        }
        return new BasicBlock(this.x);
    }
    EDGETRIGGER.prototype.get_popup_title = function EDGETRIGGER() {
        var set_param_popup_title = "Set edge trigger block parameters";
        return set_param_popup_title;
    }
}
