/* autogenerated from "macros/Misc/DSUPER.sci" */
function DSUPER() {
    DSUPER.prototype.define = function DSUPER() {
    }
    DSUPER.prototype.details = function DSUPER() {
        return this.x;
    }
    DSUPER.prototype.get = function DSUPER() {
    }
    DSUPER.prototype.set = function DSUPER() {
        y = this.needcompile;
        typ = list();
        graphics = arg1.graphics;
        if ((length(graphics.exprs)==0)) {
            warnBlockByUID(arg1.model.label,gettext("Invalid masked block."));
            this.x = arg1;
            return;
        }
        exprs = graphics.exprs[1-1];
        exprs0 = graphics.exprs[2-1][1-1];
        btitre = graphics.exprs[2-1][2-1][1-1];
        bitems = graphics.exprs[2-1][2-1].slice(2-1,$);
        if (exprs0==[]) {
            this.x = arg1;
            return;
        }
        context = [arg1.model.rpar.props.context];
        [PREVAR_scicos_context,ierr] = script2var(context,PREVAR_scicos_context);
        if (ierr!=0) {
            this.x = arg1;
            return;
        }
        tt = "scicos_context."+exprs0[1-1];
        for (i=2;i<=size(exprs0,1);i+=1) {
            tt = tt+",scicos_context."+exprs0[i-1];
        }
        ss = graphics.exprs[2-1][3-1];
        scicos_context = PREVAR_scicos_context;
        execstr("[ok,"+tt+",exprs]=scicos_getvalue(btitre,bitems,ss,exprs)");
        if (this.ok) {
            this.x = arg1;
            PREVAR_scicos_context = scicos_context;
            sblock = this.x.model.rpar;
            [sblock,%w,needcompile2,this.ok] = do_eval(sblock,list(),scicos_context);
            y = max(2,this.needcompile,needcompile2);
            this.x.graphics.exprs[1-1] = exprs;
            this.x.model.rpar = sblock;
        } else {
            this.x = arg1;
        }
    }
}
