/* autogenerated from "macros/Misc/BPLATFORM.sci" */
function BPLATFORM() {
    BPLATFORM.prototype.define = function BPLATFORM() {
        this.plen = 2;
        this.csiz = 2;
        this.phi = 0;
        this.xmin = -5;
        this.xmax = 5;
        this.ymin = 0;
        this.ymax = 15;
        this.model = scicos_model();
        this.model.sim = list(new ScilabString(["bplatform2"]), new ScilabDouble([5]));
        this.model.in = new ScilabDouble([1],[1]);
        this.model.evtin = new ScilabDouble([1]);
        this.model.dstate = new ScilabDouble([0]);
        this.model.rpar = new ScilabDouble([this.plen],[this.csiz],[this.phi],[this.xmin],[this.xmax],[this.ymin],[this.ymax]);
        this.model.blocktype = new ScilabString(["d"]);
        this.model.dep_ut = new ScilabBoolean([false,false]);
        this.exprs = string(this.model.rpar);
        this.gr_i = new ScilabString(["xstringb(orig(1),orig(2),\"BPLATFORM\",sz(1),sz(2));"]);
        this.x = new standard_define(new ScilabDouble([2,2]),this.model,new ScilabString([this.exprs]),this.gr_i);
        return new BasicBlock(this.x);
    }
    BPLATFORM.prototype.details = function BPLATFORM() {
        return this.x;
    }
    BPLATFORM.prototype.get = function BPLATFORM() {
        var options = {
            plen:["pendulum length",this.plen],
            csiz:["cart size (square side)",this.csiz],
            phi:["slope",this.phi],
            xmin:["Xmin",this.xmin],
            xmax:["Xmax",this.xmax],
            ymin:["Ymin",this.ymin],
            ymax:["Ymax",this.ymax],
        }
        return options;
    }
    BPLATFORM.prototype.set = function BPLATFORM() {
        this.exprs = this.graphics.exprs;
        var dstate = this.model.dstate;
        while (true) {
            var ok = true;
            this.plen = parseFloat(arguments[0]["plen"]);
            this.csiz = parseFloat(arguments[0]["csiz"]);
            this.phi = parseFloat(arguments[0]["phi"]);
            this.xmin = parseFloat(arguments[0]["xmin"]);
            this.xmax = parseFloat(arguments[0]["xmax"]);
            this.ymin = parseFloat(arguments[0]["ymin"]);
            this.ymax = parseFloat(arguments[0]["ymax"]);
            if (!ok) {
                break;
            }
            var mess = [];
            if (this.plen<=0||this.csiz<=0) {
                var mess = [[mess],["Pendulum length and cart size must be positive."],[" "]];
                var ok = false;
            }
            if (this.ymin>=this.ymax) {
                var mess = [[mess],["Ymax must be greater than Ymin"],[" "]];
                var ok = false;
            }
            if (this.xmin>=this.xmax) {
                var mess = [[mess],["Xmax must be greater than Xmin"],[" "]];
                var ok = false;
            }
            if (!ok) {
                message(mess);
                throw "user error";
            } else {
                var rpar = [[this.plen],[this.csiz],[this.phi],[this.xmin],[this.xmax],[this.ymin],[this.ymax]];
                this.model.rpar = new ScilabDouble(rpar);
                this.graphics.exprs = new ScilabDouble([this.exprs]);
                this.x.graphics = this.graphics;
                this.x.model = this.model;
                break;
            }
        }
        return new BasicBlock(this.x);
    }
}
